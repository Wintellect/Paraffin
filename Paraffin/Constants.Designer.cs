//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.488
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Wintellect.Paraffin {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Constants {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Constants() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Wintellect.Paraffin.Constants", typeof(Constants).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adding a missing KeyPath=&apos;yes&apos; attribute to {0}.
        /// </summary>
        internal static string AddingKeyPathToFile {
            get {
                return ResourceManager.GetString("AddingKeyPathToFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only one -alias switch at a time is supported..
        /// </summary>
        internal static string AliasMultipleSwitches {
            get {
                return ResourceManager.GetString("AliasMultipleSwitches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The array must not be null or of zero length..
        /// </summary>
        internal static string ArrayMustBeValid {
            get {
                return ResourceManager.GetString("ArrayMustBeValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following file was set to Transitive=&apos;yes&apos; but it&apos;s file size is greater than zero bytes. You need to convert to a major upgrade. File: {0}.
        /// </summary>
        internal static string AttemptingToAddPreviouslyDeletedFile {
            get {
                return ResourceManager.GetString("AttemptingToAddPreviouslyDeletedFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Autogenerated by Paraffin - Wintellect - John Robbins - john@wintellect.com.
        /// </summary>
        internal static string CommentProducer {
            get {
                return ResourceManager.GetString("CommentProducer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manual changes to this file may cause incorrect behavior..
        /// </summary>
        internal static string CommentWarning {
            get {
                return ResourceManager.GetString("CommentWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The starting directory value cannot be empty..
        /// </summary>
        internal static string DirectoryCannotBeEmpty {
            get {
                return ResourceManager.GetString("DirectoryCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The -directory specified path does not exist..
        /// </summary>
        internal static string DirectoryDoesNotExist {
            get {
                return ResourceManager.GetString("DirectoryDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only one -directory switch at a time is supported..
        /// </summary>
        internal static string DirectoryMultipleSwitches {
            get {
                return ResourceManager.GetString("DirectoryMultipleSwitches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only one -dirref switch at a time is supported..
        /// </summary>
        internal static string DirectoryRefMultipleSwitches {
            get {
                return ResourceManager.GetString("DirectoryRefMultipleSwitches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The -DiskId value must be an integer value..
        /// </summary>
        internal static string DiskIdMustBeInteger {
            get {
                return ResourceManager.GetString("DiskIdMustBeInteger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Paraffin 3.5 and higher no longer supports multiple files per component. You will need to use Paraffin 3.13 or earlier on this file..
        /// </summary>
        internal static string ErrorMultipleFilesPerComponent {
            get {
                return ResourceManager.GetString("ErrorMultipleFilesPerComponent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error on the &apos;{0}&apos; switch..
        /// </summary>
        internal static string ErrorSwitch {
            get {
                return ResourceManager.GetString("ErrorSwitch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The -groupname  value cannot be empty..
        /// </summary>
        internal static string GroupNameCannotBeEmpty {
            get {
                return ResourceManager.GetString("GroupNameCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only one -groupname switch at a time is supported..
        /// </summary>
        internal static string GroupNameMultipleSwitches {
            get {
                return ResourceManager.GetString("GroupNameMultipleSwitches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The -groupname  string value cannot be longer than 65 characters..
        /// </summary>
        internal static string GroupNameTooLong {
            get {
                return ResourceManager.GetString("GroupNameTooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A call into Windows failed unexpectedly..
        /// </summary>
        internal static string InteropCallFailed {
            get {
                return ResourceManager.GetString("InteropCallFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There appears to be multiple nodes in input .WXS file with the same file name in the same directory: {0}..
        /// </summary>
        internal static string InvalidFileNameCountFmt {
            get {
                return ResourceManager.GetString("InvalidFileNameCountFmt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file &apos;{0}&apos; does contain any elements to insert..
        /// </summary>
        internal static string InvalidMoldFile {
            get {
                return ResourceManager.GetString("InvalidMoldFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An invalid parameter was passed to the method..
        /// </summary>
        internal static string InvalidParameter {
            get {
                return ResourceManager.GetString("InvalidParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The input file was created with a newer version of Paraffin..
        /// </summary>
        internal static string MadeWithNewParaffin {
            get {
                return ResourceManager.GetString("MadeWithNewParaffin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update, patch, and creation command line options are mutually excusive..
        /// </summary>
        internal static string MutuallyExclusiveOptions {
            get {
                return ResourceManager.GetString("MutuallyExclusiveOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When creating files, any transitive patch options are invalid..
        /// </summary>
        internal static string NoPatchWhenCreating {
            get {
                return ResourceManager.GetString("NoPatchWhenCreating", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only one output or processing file can be specified..
        /// </summary>
        internal static string OutputAlreadySpecified {
            get {
                return ResourceManager.GetString("OutputAlreadySpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must specify the .WXS file to write to or process..
        /// </summary>
        internal static string OutputCannotBeEmpty {
            get {
                return ResourceManager.GetString("OutputCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removed KeyPath attribute off the Component {0}.
        /// </summary>
        internal static string RemovedKeyPathFromComponent {
            get {
                return ResourceManager.GetString("RemovedKeyPathFromComponent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to VerboseSwitch.
        /// </summary>
        internal static string SourceSwitchName {
            get {
                return ResourceManager.GetString("SourceSwitchName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to VerboseOutput.
        /// </summary>
        internal static string TraceSourceName {
            get {
                return ResourceManager.GetString("TraceSourceName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown command line option..
        /// </summary>
        internal static string UnknownCommandLineOption {
            get {
                return ResourceManager.GetString("UnknownCommandLineOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file to process does no appear to have been created with Paraffin. The comment node is missing..
        /// </summary>
        internal static string UnknownFileType {
            get {
                return ResourceManager.GetString("UnknownFileType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file to update does not exist..
        /// </summary>
        internal static string UpdateFileMustExist {
            get {
                return ResourceManager.GetString("UpdateFileMustExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Paraffin {0}
        ///(c) 2007-2012, John Robbins - john@wintellect.com
        ///A tool for generating Windows Installer XML (WiX) 3.5/3.6 file fragments. 
        ///
        ///Usage:
        /// Paraffin (-dir &lt;dir&gt; -groupname &lt;value&gt; &lt;file&gt;
        ///            [-alias &lt;alias&gt; -direXclude &lt;exdir&gt;* | -dirref &lt;DirectoryRef&gt; | 
        ///             -diskId &lt;number&gt; | -ext &lt;ext&gt;* | -includeFile &lt;file&gt;* | 
        ///             -norecurse | -regExExclude &quot;regex&quot;* | -norootdirectory | 
        ///             -verbose | -Win64 &lt;var&gt;])
        ///          (-update &lt;file&gt; 
        ///           [-direXclude [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UsageString {
            get {
                return ResourceManager.GetString("UsageString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adding custom namespace     : {0}={1}.
        /// </summary>
        internal static string VerboseAddingNamespace {
            get {
                return ResourceManager.GetString("VerboseAddingNamespace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating file               : {0}.
        /// </summary>
        internal static string VerboseCreateFile {
            get {
                return ResourceManager.GetString("VerboseCreateFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Processing file             : {0}.
        /// </summary>
        internal static string VerboseCreateZeroFiles {
            get {
                return ResourceManager.GetString("VerboseCreateZeroFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File removed, patching      : {0}.
        /// </summary>
        internal static string VerboseFileRemoved {
            get {
                return ResourceManager.GetString("VerboseFileRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating new directory      : {0}.
        /// </summary>
        internal static string VerboseProcessNewDirectory {
            get {
                return ResourceManager.GetString("VerboseProcessNewDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating existing directory : {0}.
        /// </summary>
        internal static string VerboseProcessUpdateDirectory {
            get {
                return ResourceManager.GetString("VerboseProcessUpdateDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Return code                 : {0}.
        /// </summary>
        internal static string VerboseReturnValue {
            get {
                return ResourceManager.GetString("VerboseReturnValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating file               : {0}.
        /// </summary>
        internal static string VerboseUpdateFile {
            get {
                return ResourceManager.GetString("VerboseUpdateFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating zero byte file     : {0}.
        /// </summary>
        internal static string VerboseZeroByteFile {
            get {
                return ResourceManager.GetString("VerboseZeroByteFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only one -Win64Var switch at a time is supported..
        /// </summary>
        internal static string Win64VarMultipleSwitches {
            get {
                return ResourceManager.GetString("Win64VarMultipleSwitches", resourceCulture);
            }
        }
    }
}
